/**
 * Single Responsibility BEM: Use your browser's search feature 
 * to find $METHOD to get started. It uses adjoining classes, 
 * which I'm well aware do not work in IE6 (that is, if anyone 
 * is still building for IE6). The downside about the second 
 * modifier method is that @extend didn't work within media 
 * queries, last I checked. The first method is still golden.
 */

/* Also, if you check the output, you'll see there's no bloat to be found. */
@import url(http://fonts.googleapis.com/css?family=Titillium+Web:400,600,900,700italic,200,400italic);
@import url(http://netdna.bootstrapcdn.com/font-awesome/3.2.0/css/font-awesome.min.css);
@import "compass";


$max-width: 80em;



// =Typography
// *************************************************************************/

$primary: "Titillium Web", Helvetica, Verdana, Arial, sans-serif;

// Compass vertical rhythm
$base-font-size: 16px;
$base-line-height: 21px;

/* Custom mixin to define typographic scale
    Usage: @include scale('l'); 
*/
@mixin scale($font) {
  @if $font == 'ginormous' {
    @include adjust-font-size-to(60px);
  }
  @if $font == 'xxl' {
    @include adjust-font-size-to(48px);
  }
  @if $font == 'xl' {
    @include adjust-font-size-to(36px);
  }
  
  @if $font == 'l' {
    @include adjust-font-size-to(30px);
  }

  @if $font == 'm' {
    @include adjust-font-size-to(24px);
  }

  @if $font == 's' {
    @include adjust-font-size-to(21px);
  }

  @if $font == 'xs' {
    @include adjust-font-size-to(18px);
  }
}

// =/Typography
// *************************************************************************/

 /* =Utility Mixins
 *************************************************************************/

/* A custom mixin to streamline animations.
 Usage: @include animation(spin, 1.3s, infinite, ease-in); */

@mixin animation($handle, $duration, $method, $time: infinite) {
    -moz-animation: $handle $duration $time $method;
    -o-animation: $handle $duration $time $method;
    -webkit-animation: $handle $duration $time $method;
    animation: $handle $duration $time $method;
}
/* A custom mixin to define animations.
    Usage: @include animation-frames(spin) {
        from {
            color: red;
        }

        to {
            color: white;
        }
    }
*/
@mixin animation-frames($name) {
    @-moz-keyframes $name {
        @content;
    }

    @-webkit-keyframes $name {
        @content;
    }

    @-o-keyframes $name {
        @content;
    }

    @-ms-keyframes $name {
        @content;
    }

    @keyframes $name {
        @content;
    }
}

  
/* =/Utility Mixins
*************************************************************************/

// /* =Palette
// *************************************************************************/
  
$ocean-blue: rgba(0, 112, 255, 1);
$ocean-blue-dark: darken($ocean-blue, 13);
$aqua: rgba(0, 214, 255, 1);
$sky-blue: rgba(0, 155, 255, 1);
$sky-blue-dark: darken($sky-blue, 40);
$lime: rgba(138, 255, 0, 1);
$lime-light: lighten($lime, 16);
$white: rgba(255, 255, 255, 1);
$white-translucent: rgba($white, 0.6);
$grey: rgba(40, 40, 40, 1);
  
// /* =/Palette
// *************************************************************************/

/* =Media Mixins
*************************************************************************/
/* Custom mixin for media queries.
  Usage: @include flow('small') {
    .class {
      background: red;
    }
  }

  OR

  .class {
    background: red;
    @include mq-flow('small') {
      background: blue;
    }
  } */
@mixin mq-flow($state) {
  @if $state == 'small' {
    @media screen and (max-width: 30em) {
      @content;
    }
  }
  @if $state == 'medium' {
    @media screen and (max-width: 45em) {
      @content;
    }
  }
  @if $state == 'large' {
    @media screen and (max-width: 60em) {
      @content;
    }
  }
  @if $state == 'super' {
    @media screen and (max-width: 75em) {
      @content;
    }
  }
  @if $state == 'massive' {
    @media screen and (max-width: 90em) {
      @content;
    }
  }
}


/* =/Media Mixins
*************************************************************************/

/* =Pen Styles
*************************************************************************/

*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  background: lighten($sky-blue, 30);
  color: $grey;
  font-family: $primary;
  margin: 0 auto;
  max-width: $max-width;
}

h1 {
  @include scale('xxl');
}

h2 {
  @include scale('xl');
}

h3 {
  @include scale('l');
}

h4 {
  @include scale('m');
}

img {
  width: 100%
}

.container {
  margin: 0 auto;
  max-width: $max-width;
  padding: 0 1em;
}

.intro,
.outro {
  @include scale(l);
  clear: both;
}

.hero {
  position: relative;

  .__pitch {
    background: $ocean-blue-dark;
    color: $white;
    padding: 0.4em;
    width: 20em;
  }
}

.info {
  width: 100%;
}

.attributes {
  display: inline-block;
  margin-right: 1%;
  width: 49%;
  &:nth-child(2n) {
    margin-right: 0;
  }
  .__title {
    
  }
  .__list {
    list-style: none;
    padding: 0;
    .__icon {
      @extend %_--positiveIcon;
      @extend %_--negativeIcon;
      margin-right: 0.5em;
    }
  }
}

.examples {
  background: $white-translucent;
  margin-bottom: 1em;
  padding: 0.5em;
  &:after {
    content: "";
    clear: both;
    display: table;
  }
  .__title {
    margin-top: 0;
  }

  .__button {
    background: $ocean-blue-dark;
    color: $white;
    float: left;
    font-weight: 600;
    margin: 0.3em;
    padding: 0.8em;
    text-decoration: none;
  }
}

/* =/Pen Styles
*************************************************************************/

/* =Augments
*************************************************************************/

/**
 * Augment classes: alpha, beta.
 */

.augment-alpha%_--positiveIcon {
  /* referencing %_--positiveIcon */
  color: green;
}

.augment-beta%_--negativeIcon {
  /* referencing %_--negativeIcon */
  color: red;
}
/* =/Augments
*************************************************************************/